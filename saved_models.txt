import joblib
from sklearn.ensemble import RandomForestClassifier

model = RandomForestClassifier()
model.fit(X_train, y_train)

# Save it locally
joblib.dump(model, "saved_models/Random_Forest.pkl") 

from sklearn.svm import SVC

svm = SVC(probability=True, random_state=42)
svm.fit(X_train, y_train)
joblib.dump(svm, "saved_models/svm.pkl")

from xgboost import XGBClassifier

xgb = XGBClassifier(use_label_encoder=False, eval_metric='logloss', random_state=42)
xgb.fit(X_train, y_train)
joblib.dump(xgb, "saved_models/xgboost.pkl")


from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense, Dropout
import joblib

# Preprocess data if needed (e.g., using your own preprocessor)
X_train_processed = preprocessor.fit_transform(X_train)

model = Sequential([
    Dense(64, activation='relu', input_shape=(X_train_processed.shape[1],)),
    Dropout(0.3),
    Dense(32, activation='relu'),
    Dropout(0.3),
    Dense(1, activation='sigmoid')
])
model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])
model.fit(X_train_processed, y_train, epochs=50, validation_split=0.2, verbose=0)

# Save model and preprocessor
model.save("saved_models/keras_model.h5")
joblib.dump(preprocessor, "saved_models/keras_preprocessor.pkl")
